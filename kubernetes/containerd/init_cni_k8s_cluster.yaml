---
- hosts: master
  become: yes
  tasks:
    - name: Add Helm apt-key
      apt_key:
        url: https://baltocdn.com/helm/signing.asc
        state: present

    - name: Add Helm apt repository
      apt_repository:
        repo: deb https://baltocdn.com/helm/stable/debian/ all main
        state: present
        filename: 'helm-stable-debian.list'

    - name: Install required packages
      ansible.builtin.package:
        name:
          - apt-transport-https
          - python3-pip
          - helm
        state: latest

- hosts: master
  become_user: aida
  vars:
    API_SERVER_IP: "{{ ansible_ssh_host }}"
    API_SERVER_PORT: 6443
  tasks:
    - name: Add Cilium Helm repo
      kubernetes.core.helm_repository:
        name: cilium
        repo_url: "https://helm.cilium.io/"

    - name: Install Cilium CNI using Helm
      kubernetes.core.helm:
        kubeconfig: "{{ ansible_user_dir }}/.kube/config"
        name: cilium
        chart_ref: cilium/cilium
        chart_version: 1.17.3
        release_namespace: kube-system
        create_namespace: true
        values:
          kubeProxyReplacement: true
          k8sServiceHost: "{{ API_SERVER_IP }}"
          k8sServicePort: "{{ API_SERVER_PORT }}"

    - name: Wait for Cilium Pods to be ready
      shell: sleep 30

    - name: Enable UI and Relay for Cilium using Helm
      become: yes
      become_user: aida
      shell: helm upgrade cilium cilium/cilium --version 1.17.3 --namespace kube-system --reuse-values --set hubble.relay.enabled=true --set hubble.ui.enabled=true --set hubble.ui.service.type=NodePort

#    - name: install Pod network
#      become: yes
#      become_user: aida
#      shell: kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml >> pod_network_setup.txt
#      args:
#        chdir: $HOME
#        creates: pod_network_setup.txt

#    - name: Enable kube-proxy, if needed (e.g., in case disabled when creating cluster and later want to deploy a CNI with flannel)
#      become: yes
#      shell: kubeadm init phase addon kube-proxy  --kubeconfig ~/.kube/config
