apiVersion: v1
kind: ConfigMap
metadata:
  name: telegraf-master
  namespace: measurement
  labels:
    k8s-app: telegraf
data:
 telegraf.conf: |+
   [agent]
     interval= "10s"
     round_interval= true
     metric_batch_size= 1000
     metric_buffer_limit= 10000
     collection_jitter= "0s"
     flush_interval= "10s"
     flush_jitter= "0s"
     precision= ""
     debug= false
     quiet= false
     logfile= ""
     hostname= "$HOSTNAME"
     omit_hostname= false

   [[outputs.kafka]]
     brokers = ["bitnami-kafka-headless.observability.svc.cluster.local:9092"]
     topic = "overcloud"
     data_format = "json"
     [outputs.kafka.topic_suffix]
       method = "measurement"
       separator = "_"

   [[outputs.prometheus_client]]
         ## Address to listen on.
         listen = ":9126"
         collectors_exclude = ["gocollector", "process"]

   [[inputs.cpu]]
     percpu = true
     totalcpu = true
     collect_cpu_time = false
     report_active = false
       fieldinclude = ["usage_user", "usage_system", "usage_idle", "usage_active", "usage_nice", "usage_iowait", "usage_irq", "usage_softirq", "usage_steal", "usage_guest", "usage_guest_nice"]
   [[inputs.disk]]
     ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs", "loop*"]
     fieldinclude = ["free", "used", "total", "used_percent"]
   [[inputs.diskio]]
     devices = ["sd*", "nvme*", "vda"]
     fieldinclude = ["read_time", "write_time", "read_bytes", "write_bytes", "io_time"]
   [[inputs.mem]]
     fieldinclude = ["available", "free", "total", "used_percent"]
   [[inputs.net]]
     interfaces= ["eth*", "ens*", "eno*", "enp*"]
     ignore_protocol_stats= true
   [[inputs.system]]
     fieldinclude = ["load1", "load5", "load15"]
   [[inputs.temp]]
     metric_format = "v2"
   [[inputs.intel_powerstat]]
     package_metrics = ["current_power_consumption"]
   [[inputs.kube_inventory]]
     interval = "6000s"
     url = "https://$HOSTIP:6443"
     resource_include = [ "pods", "deployments", "daemonsets", "statefulsets" ]
     namespace = ""
     insecure_skip_verify = true
   [[inputs.kubernetes]]
     interval = "10s"
     url = "https://$HOSTIP:10250"
     insecure_skip_verify = true
     namepass = ["kubernetes_pod_container", "kubernetes_pod_volume", "kubernetes_pod_network"]
   [[inputs.docker]]
     endpoint = "unix:///var/run/docker.sock"
     perdevice_include = ["cpu", "blkio", "network"]
     total_include = ["cpu", "blkio", "network"]
   

---
# Section: Daemonset
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: telegraf-master
  namespace: measurement
  labels:
    k8s-app: telegraf
spec:
  selector:
    matchLabels:
      name: telegraf
  template:
    metadata:
      labels:
        name: telegraf
    spec:
      serviceAccountName: telegraf
      tolerations:
      - operator: "Exists"
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      hostNetwork: true
      containers:
      - name: telegraf
        image: telegraf:1.35.2-alpine
        securityContext:
          privileged: true
          capabilities:
            add:
              - SYS_ADMIN
        #args:
        #  - "--user telegraf:$(stat -c '%g' /var/run/docker.sock)"
        resources:
          limits:
            cpu: 150m
            memory: 200Mi
          requests:
            cpu: 50m
            memory: 50Mi
        env:
        - name: HOSTIP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: "HOST_PROC"
          value: "/rootfs/proc"
        - name: "HOST_SYS"
          value: "/rootfs/sys"
        #- name: "TELEGRAF_TOKEN"
        #  valueFrom:
        #    secretKeyRef:
        #      name: telegraf-measurement-secret
        #      key: token
        volumeMounts:
        - name: sys
          mountPath: /rootfs/sys
          readOnly: true
        - name: proc
          mountPath: /rootfs/proc
          readOnly: true
        - name: docker-socket
          mountPath: /var/run/docker.sock
        - name: utmp
          mountPath: /var/run/utmp
        - name: cpu
          mountPath: /dev/cpu
        - name: devices
          mountPath: /sys/devices
          readOnly: true
        - name: config
          mountPath: /etc/telegraf
      terminationGracePeriodSeconds: 10
      volumes:
      - name: sys
        hostPath:
          path: /sys
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
      - name: proc
        hostPath:
          path: /proc
      - name: utmp
        hostPath:
          path: /var/run/utmp
      - name: cpu
        hostPath:
          path: /dev/cpu
      - name: devices
        hostPath:
          path: /sys/devices
      - name: config
        configMap:
          name: telegraf-master